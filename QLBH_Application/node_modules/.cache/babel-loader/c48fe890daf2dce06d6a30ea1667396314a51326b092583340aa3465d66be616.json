{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport pageheader from \"@/components/page-header.vue\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"PRODUCT-LIST\",\n  components: {\n    pageheader\n  },\n  data() {\n    return {\n      searchProduct: null,\n      searchCustomerName: null,\n      searchSDTCustomer: null,\n      form: false,\n      headersTable: [{\n        title: 'STT',\n        value: 'stt',\n        sortable: true\n      }, {\n        title: 'Tên khách hàng',\n        value: 'customerName',\n        sortable: true\n      }, {\n        title: 'SĐT',\n        value: 'sdtCustomer',\n        sortable: true\n      }, {\n        title: 'SĐT Zalo',\n        value: 'sdtZaloCustomer',\n        sortable: true\n      }, {\n        title: 'Tên sản phẩm',\n        value: 'productName',\n        sortable: true\n      }, {\n        title: 'Ảnh sản phẩm',\n        value: 'productName',\n        sortable: true\n      }, {\n        title: 'Hành đồng',\n        value: 'actions',\n        sortable: false\n      }],\n      orderData: [],\n      product: []\n    };\n  },\n  computed: {\n    filteredData() {\n      return this.orderData.filter(item => {\n        // Lọc theo loại sản phẩm\n        const matchesProduct = this.searchProduct ? item.productId === this.searchProduct : true;\n\n        // Lọc theo tên khách \n        const matchesSearchCustomerName = this.searchCustomerName ? item.productName?.toLowerCase().includes(this.searchCustomerName.toLowerCase()) : true;\n        return matchesProduct && matchesSearchCustomerName;\n      });\n    }\n  },\n  created() {\n    this.GetData();\n    this.GetProduct();\n  },\n  methods: {\n    GetData() {\n      this.$apiClient.get(`/Order/GetAll`).then(response => {\n        this.orderData = response.data;\n      }).catch(error => {\n        this.$notify(error.response.data.Message, error.response.data.Errors.join('. '), \"error\");\n      });\n    },\n    GetProduct() {\n      this.$apiClient.get(`/Product/GetAll`).then(response => {\n        this.product = response.data;\n      });\n    },\n    CreateEditProduct(id) {\n      if (id == 0) {\n        this.titleDialog = \"Thêm loại sản phẩm\";\n        this.selectProductType.id = 0;\n        this.selectProductType.name = null;\n      } else {\n        const producttype = this.productTypeData.find(Type => Type.id === id);\n        this.selectProductType = {\n          ...producttype\n        };\n      }\n    },\n    DeleteProduct(id, name) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger ml-2\"\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: \"Bạn có chắc chắn không?\",\n        text: `Bạn đang muốn xóa loại sản phẩm: ${name}`,\n        icon: \"warning\",\n        confirmButtonText: \"Có!\",\n        cancelButtonText: \"Không!\",\n        showCancelButton: true\n      }).then(confirm => {\n        if (confirm.value) {\n          this.$apiClient.delete(`/ProductType/Delete/${id}`).then(reponse => {\n            console.log(reponse);\n            if (reponse.status) {\n              swalWithBootstrapButtons.fire(\"Xóa thành công!\", `Đã xóa thành công dịch vụ: ${name}`, \"success\");\n              this.GetData();\n            } else {\n              swalWithBootstrapButtons.fire(reponse.data.Message, reponse.data.Errors.join('. '), \"error\");\n            }\n          }).catch(error => {\n            swalWithBootstrapButtons.fire(error.reponse.data.Message, error.reponse.data.Errors.join('. '), \"error\");\n          });\n        } else if (/* Read more about handling dismissals below */confirm.dismiss === Swal.DismissReason.cancel) return;\n      });\n    },\n    Save() {\n      this.$apiClient.put(`/ProductType/CreateEdit`, this.selectProductType).then(() => {\n        this.$notify(\"Thao tác thành công\", \"\", \"success\");\n        this.GetData();\n        this.viewdialog = false;\n      }).catch(error => {\n        this.$notify(error.response.data.Message, error.response.data.Errors.join('. '), \"error\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["pageheader","Swal","name","components","data","searchProduct","searchCustomerName","searchSDTCustomer","form","headersTable","title","value","sortable","orderData","product","computed","filteredData","filter","item","matchesProduct","productId","matchesSearchCustomerName","productName","toLowerCase","includes","created","GetData","GetProduct","methods","$apiClient","get","then","response","catch","error","$notify","Message","Errors","join","CreateEditProduct","id","titleDialog","selectProductType","producttype","productTypeData","find","Type","DeleteProduct","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","icon","confirmButtonText","cancelButtonText","showCancelButton","confirm","delete","reponse","console","log","status","dismiss","DismissReason","cancel","Save","put","viewdialog"],"sources":["D:\\Du_An\\BanHang_ThietBiDienThu\\QLBH_Application\\src\\views\\Manage\\Page\\Order.vue"],"sourcesContent":["<script>\r\n    import pageheader from \"@/components/page-header.vue\"\r\n    import Swal from \"sweetalert2\";\r\n    export default {\r\n        name: \"PRODUCT-LIST\",\r\n        components: {\r\n            pageheader\r\n        },\r\n        data(){\r\n            return{\r\n                searchProduct: null,\r\n                searchCustomerName: null,\r\n                searchSDTCustomer: null,\r\n                form: false,\r\n                headersTable:[\r\n                        {title: 'STT', value: 'stt',sortable: true},\r\n                        {title: 'Tên khách hàng',value:'customerName',sortable: true},\r\n                        {title: 'SĐT',value:'sdtCustomer',sortable: true},\r\n                        {title: 'SĐT Zalo',value:'sdtZaloCustomer',sortable: true},\r\n                        {title: 'Tên sản phẩm',value:'productName',sortable: true},\r\n                        {title: 'Ảnh sản phẩm',value:'productName',sortable: true},\r\n                        {title: 'Hành đồng',value: 'actions',sortable: false}\r\n                    ],\r\n                orderData: [\r\n\r\n                ],\r\n                product:[\r\n\r\n                ],\r\n            }\r\n        },\r\n        computed:{\r\n            filteredData() {\r\n                return this.orderData.filter((item) => {\r\n                    // Lọc theo loại sản phẩm\r\n                    const matchesProduct = this.searchProduct\r\n                    ? item.productId === this.searchProduct\r\n                    : true;\r\n\r\n                    // Lọc theo tên khách \r\n                    const matchesSearchCustomerName = this.searchCustomerName\r\n                    ? item.productName?.toLowerCase().includes(this.searchCustomerName.toLowerCase())\r\n                    : true;\r\n\r\n\r\n                    return matchesProduct &&  matchesSearchCustomerName;\r\n                });\r\n            },\r\n        },\r\n        created(){\r\n            this.GetData();\r\n            this.GetProduct();\r\n        },\r\n        methods:{\r\n            GetData(){\r\n                this.$apiClient.get(`/Order/GetAll`)\r\n                        .then(response=>{\r\n                            this.orderData = response.data;\r\n                        })\r\n                        .catch(error=>{\r\n                            this.$notify(error.response.data.Message,error.response.data.Errors.join('. '),\"error\");\r\n                        })\r\n            },\r\n            GetProduct(){\r\n                this.$apiClient.get(`/Product/GetAll`)\r\n                        .then(response=>{\r\n                            this.product = response.data;\r\n                        })\r\n            },\r\n            CreateEditProduct(id){\r\n                if(id == 0){\r\n                    this.titleDialog = \"Thêm loại sản phẩm\";\r\n                    this.selectProductType.id = 0;\r\n                    this.selectProductType.name = null;\r\n                }\r\n                else{\r\n                    const producttype = this.productTypeData.find(Type => Type.id === id);\r\n                    this.selectProductType = {...producttype}\r\n                }\r\n            },\r\n            DeleteProduct(id,name){\r\n                const swalWithBootstrapButtons = Swal.mixin({\r\n                customClass: {\r\n                    confirmButton: \"btn btn-success\",\r\n                    cancelButton: \"btn btn-danger ml-2\",\r\n                },\r\n                buttonsStyling: false,\r\n            });\r\n\r\n            swalWithBootstrapButtons\r\n                .fire({\r\n                    title: \"Bạn có chắc chắn không?\",\r\n                    text: `Bạn đang muốn xóa loại sản phẩm: ${name}`,\r\n                    icon: \"warning\",\r\n                    confirmButtonText: \"Có!\",\r\n                    cancelButtonText: \"Không!\",\r\n                    showCancelButton: true,\r\n                })\r\n                .then((confirm) => {\r\n                    if (confirm.value) {\r\n                        this.$apiClient.delete(`/ProductType/Delete/${id}`)\r\n                                    .then(reponse=> {\r\n                                        console.log(reponse)\r\n                                        if(reponse.status){\r\n                                            swalWithBootstrapButtons.fire(\r\n                                            \"Xóa thành công!\",\r\n                                            `Đã xóa thành công dịch vụ: ${name}`,\r\n                                            \"success\")\r\n                                            this.GetData()\r\n                                        }\r\n                                        else{\r\n                                            swalWithBootstrapButtons.fire(\r\n                                                reponse.data.Message,\r\n                                                reponse.data.Errors.join('. '),\r\n                                                \"error\"\r\n                                            );\r\n                                        }\r\n                                    })\r\n                                    .catch(error =>{\r\n                                        swalWithBootstrapButtons.fire(\r\n                                            error.reponse.data.Message,\r\n                                            error.reponse.data.Errors.join('. '),\r\n                                            \"error\"\r\n                                        );\r\n                                    })\r\n                    } else if ( /* Read more about handling dismissals below */ confirm.dismiss === Swal.DismissReason.cancel) return\r\n                });\r\n            },\r\n            Save(){\r\n                this.$apiClient.put(`/ProductType/CreateEdit`,this.selectProductType)\r\n                        .then(()=>{\r\n                            this.$notify(\"Thao tác thành công\",\"\",\"success\");\r\n                            this.GetData();\r\n                            this.viewdialog = false;\r\n                        })\r\n                        .catch(error=>{\r\n                            this.$notify(error.response.data.Message,error.response.data.Errors.join('. '),\"error\");\r\n                        })\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<template>\r\n        <pageheader title=\"\" pageTitle=\"Chờ tư vấn\" />\r\n        <BRow>\r\n            <BCol class=\"col-sm-12\">\r\n                <BCard>\r\n                    <BCardBody class=\"p-0\">\r\n                        <BRow>\r\n                            <BCol class=\"col-sm-4 col-6\">\r\n                                <v-autocomplete\r\n                                    clearable\r\n                                    label=\"Sản phẩm\"\r\n                                    :items=\"product\"\r\n                                    item-title=\"name\"\r\n                                    item-value=\"id\"\r\n                                    v-model=\"searchProduct\"\r\n                                    variant=\"outlined\"\r\n                                    hide-details>\r\n                                </v-autocomplete>\r\n                            </BCol>\r\n                            <Bcol class=\"col-sm-4 col-6\"><v-text-field label=\"Tên khách hàng\" variant=\"outlined\" v-model=\"searchCustomerName\" clearable hide-details></v-text-field></Bcol>\r\n                            <Bcol class=\"col-sm-4 col-6\"><v-text-field label=\"SĐT khách hàng\" variant=\"outlined\" v-model=\"searchSDTCustomer\" clearable hide-details></v-text-field></Bcol>\r\n\r\n                        </BRow>\r\n                    </BCardBody>\r\n                </BCard>\r\n                <BCard no-body class=\"table-card p-sm-2\">\r\n                    <BCardBody>\r\n                        <v-data-table \r\n                            :headers = \"headersTable\"\r\n                            :items=\"filteredData\"\r\n                            class=\"border-sm rounded-lg\">\r\n                            <template v-slot:[`item.stt`]=\"{ index }\">\r\n                                {{ index + 1 }}\r\n                            </template>\r\n                            <template v-slot:[`item.actions`]=\"{ item }\">\r\n                                <v-icon class=\"ml-lg-3\" small @click=\"(viewdialog = !viewdialog) && (CreateEditProduct(item.id))\" >mdi-pencil-circle </v-icon>\r\n                                <v-icon class=\"ml-lg-3\" small @click=\"DeleteProduct(item.id,item.name)\" >mdi-delete-empty </v-icon>\r\n                            </template>\r\n                        </v-data-table>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n        </BRow>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}