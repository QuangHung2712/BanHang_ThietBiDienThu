{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n\n// Tạo một instance của axios\nconst apiClient = axios.create({\n  baseURL: \"https://localhost:7254/api\",\n  // URL cơ bản của API\n  timeout: 10000,\n  // Thời gian chờ (ms)\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Thêm interceptor nếu cần\napiClient.interceptors.request.use(config => {\n  // Thêm token hoặc tùy chỉnh trước khi gửi request\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napiClient.interceptors.response.use(response => response, error => {\n  // Xử lý lỗi chung\n  if (error.response?.status === 401) {\n    console.log(error.response?.status);\n    this.$router.push({\n      name: 'login'\n    });\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","console","log","$router","push","name"],"sources":["D:/Du_An/BanHang_ThietBiDienThu/QLBH_Application/src/components/common/apiClient.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Tạo một instance của axios\r\nconst apiClient = axios.create({\r\n  baseURL: \"https://localhost:7254/api\", // URL cơ bản của API\r\n  timeout: 10000, // Thời gian chờ (ms)\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Thêm interceptor nếu cần\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Thêm token hoặc tùy chỉnh trước khi gửi request\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Xử lý lỗi chung\r\n    if (error.response?.status === 401) {\r\n      console.log(error.response?.status)\r\n      this.$router.push({ name: 'login' });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,4BAA4B;EAAE;EACvCC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDb,SAAS,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAEC,MAAM,KAAK,GAAG,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACG,QAAQ,EAAEC,MAAM,CAAC;IACnC,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;EACtC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}